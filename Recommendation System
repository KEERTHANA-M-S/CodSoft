import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel

# Sample movie dataset
movies_data = {
    'Title': ['Movie 1', 'Movie 2', 'Movie 3', 'Movie 4', 'Movie 5'],
    'Genre': ['Action', 'Drama', 'Action|Drama', 'Comedy', 'Comedy|Romance']
}

user_preferences = {'Genre': 'Action|Romance'}

# Create a DataFrame from the movie dataset
movies_df = pd.DataFrame(movies_data)

# Combine relevant information into a single string
movies_df['Combined'] = movies_df['Genre']

# Create a TF-IDF Vectorizer
tfidf_vectorizer = TfidfVectorizer(stop_words='english')

# Fit and transform the data
tfidf_matrix = tfidf_vectorizer.fit_transform(movies_df['Combined'])

# Transform the user's preferences
user_tfidf = tfidf_vectorizer.transform([user_preferences['Genre']])

# Calculate cosine similarity between movies and user preferences
cosine_similarities = linear_kernel(user_tfidf, tfidf_matrix).flatten()

# Get movie recommendations based on similarity scores
movie_recommendations = list(movies_df['Title'][cosine_similarities.argsort()[::-1]])

# Remove movies already watched by the user
movie_recommendations = [movie for movie in movie_recommendations if movie not in user_preferences]

# Display recommendations
print("Movie Recommendations:")
for i, movie in enumerate(movie_recommendations[:5]):
    print(f"{i+1}. {movie}")
